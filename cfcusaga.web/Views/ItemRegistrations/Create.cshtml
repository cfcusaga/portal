@model Cfcusaga.Web.ViewModels.ItemRegistrationModel

@{
    //ViewBag.Title = "Participant Registration";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@ViewBag.SubTitle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @*<div class="form-group">
            @Html.LabelFor(model => model.RelationToMemberTypeId, "Registration is for my", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RelationToMemberTypeId, Model.RelationToMemberTypes, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.RelationToMemberTypeId, "", new {@class = "text-danger"})
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.RelationToMemberTypeId, "Registration is for my", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var depart in Model.RelationToMemberTypes)
                {
                    if (Model.RelationToMemberTypeId == null && depart.Value == "0")
                    {
                        @depart.Text <span style="margin-left: 5px"></span> @Html.RadioButtonFor(m => m.RelationToMemberTypeId, depart.Value, new { @checked = "checked" })<span style="margin-left: 10px">|</span>
                    }
                    else
                    {
                        @depart.Text <span style="margin-left: 5px"></span> @Html.RadioButtonFor(m => m.RelationToMemberTypeId, depart.Value)<span style="margin-left: 10px">|</span>
                    }
                }  
                @Html.ValidationMessageFor(model => model.RelationToMemberTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.IsRequireBirthDate)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
        }


        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Male: @Html.RadioButtonFor(model => model.Gender, "M", new { htmlAttributes = new { @class = "form-control" } })
                Female: @Html.RadioButtonFor(model => model.Gender, "F", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Allergies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Allergies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Allergies, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.IsShirtIncluded)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.TshirtSize, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.TshirtSize, (IEnumerable<SelectListItem>)ViewBag.TshirtSizes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TshirtSize, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { controller = "Items" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
