@model PagedList.IPagedList<cfcusaga.data.Order>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
}

<h2>Orders Main</h2>

<div class="bs-docs-section">
    <div class="row">
        @using (Html.BeginForm("Index", "Orders", FormMethod.Get))
        {

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon">Find: </span>
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                    <span class="input-group-btn">
                        <input type="submit" class="btn btn-info btn-sm" value="Search" />
                    </span>
                </div>
            </div>
        }
    </div>
</div>



<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped table-hover">
    <tr>
        <th>
            @Html.ActionLink("ID", "Index", new { sortOrder = ViewBag.OrderIdSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.OrderDateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new {sortOrder = ViewBag.FirstNameSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Order Total", "Index", new {sortOrder = ViewBag.TotalSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("City", "Index", new { sortOrder = ViewBag.CitySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("State", "Index", new { sortOrder = ViewBag.StateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Postal Code", "Index", new { sortOrder = ViewBag.ZipCodeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Order Status", "Index", new { sortOrder = ViewBag.OrderStatusSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.OrderId.ToString(), "Details", new {id = item.OrderId.ToString()})
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostalCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderStatus.Name)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>*@
            <td>
                @*@Html.ActionLink("Edit", "Edit", new {id = item.OrderId}) |
    @Html.ActionLink("Details", "Details", new {id = item.OrderId}) |
    @Html.ActionLink("Delete", "Delete", new {id = item.OrderId})*@
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))